version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: localspot-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: localspot
      POSTGRES_USER: localspot_user
      POSTGRES_PASSWORD: localspot_password
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U localspot_user -d localspot"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - localspot-network

  # Backend Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: localspot-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/localspot
      SPRING_DATASOURCE_USERNAME: localspot_user
      SPRING_DATASOURCE_PASSWORD: localspot_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      UPLOAD_DIR: /app/uploads
    ports:
      - "9091:9091"
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9091/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - localspot-network

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: localspot-frontend
    restart: unless-stopped
    ports:
      - "4200:8080"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - localspot-network

  # Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    container_name: localspot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - localspot-network

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  localspot-network:
    driver: bridge